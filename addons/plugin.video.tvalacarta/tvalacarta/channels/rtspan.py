# -*- coding: utf-8 -*-#------------------------------------------------------------# pelisalacarta - XBMC Plugin# Canal para http://conectate.gov.ar# creado por rsantaella# http://blog.tvalacarta.info/plugin-xbmc/pelisalacarta/#------------------------------------------------------------import urlparse,urllib2,urllib,reimport os, sysfrom core import loggerfrom core import configfrom core import scrapertoolsfrom core.item import Itemfrom servers import servertools__channel__ = "rtspan"__category__ = "F"__type__ = "generic"__title__ = "rtspan"__language__ = "ES"__creationdate__ = "20121212"__vfanart__ = ""PROGRAMAS_URL = "http://actualidad.rt.com/programas"VIDEOS_URL = "http://actualidad.rt.com/video"DEBUG = config.get_setting("debug")def isGeneric():    return Truedef mainlist(item):    logger.info("tvalacarta.channels.rtspan mainlist")    itemlist = []    itemlist.append( Item(channel=__channel__, title="Todos los programas", action="programas", url=PROGRAMAS_URL,  fanart = __vfanart__))     itemlist.append( Item(channel=__channel__, title="Últimos vídeos", action="episodios", url=VIDEOS_URL,  fanart = __vfanart__))    return itemlistdef programas(item):    logger.info("tvalacarta.channels.rtspan programas")    itemlist = []        # Descarga la lista de canales    if item.url=="":        item.url = PROGRAMAS_URL    data = scrapertools.cache_page(item.url)    #logger.info("data="+data)    '''    <li class="list-element js-programs-list">    <div class="list-cell effect-sadie">    <figure class="media">    <a href="/programas/detras_de_la_noticia">    <span class="ration_16-9">    <img src="http://esp.rt.com/actualidad/public_images/2014.12/original/54856e4671139ea0438b456c.jpg" alt="Detras">    </span>    </a>    </figure>    <div class="summary js-programs-summary">    <div class="summary-wrapper">    <h3 class="header">    <a href="/programas/detras_de_la_noticia">    Detrás de la noticia    </a>                            </h3>    <p>    <a href="/programas/detras_de_la_noticia">    &iquest;Qu&eacute; es lo que queda detr&aacute;s de la noticia?  En el nuevo programa de RT la abogada y escritora Eva Golinger abre un espacio para analizar, debatir e investigar los eventos...    </a>    </p>    </div>    </div>    <span class="js-programs-info icon-i">    i    </span>    </div>    </li>    '''    patron  = '<li class="list-element js-programs-list"[^<]+'    patron += '<div class="list-cell effect-sadie"[^<]+'    patron += '<figure class="media"[^<]+'    patron += '<a href="([^"]+)"[^<]+'    patron += '<span class="ration_16-9"[^<]+'    patron += '<img src="([^"]+)"[^<]+'    patron += '</span[^<]+'    patron += '</a[^<]+'    patron += '</figure[^<]+'    patron += '<div class="summary js-programs-summary"[^<]+'    patron += '<div class="summary-wrapper"[^<]+'    patron += '<h3 class="header"[^<]+'    patron += '<a[^>]+>([^<]+)</a[^<]+'    patron += '</h3[^<]+'    patron += '<p[^<]+'    patron += '<a[^>]+>([^<]+)</a[^<]+'    matches = re.compile(patron,re.DOTALL).findall(data)    if DEBUG: scrapertools.printMatches(matches)    for scrapedurl,scrapedthumbnail,scrapedtitle,scrapedplot in matches:        title = scrapedtitle.strip()        url = urlparse.urljoin(item.url,scrapedurl)        thumbnail = scrapedthumbnail        plot = scrapertools.htmlclean(scrapedplot).strip()        if (DEBUG): logger.info("title=["+title+"], url=["+url+"], thumbnail=["+thumbnail+"]")        itemlist.append( Item(channel=__channel__, title=title , action="episodios" , url=url, thumbnail=thumbnail, fanart=thumbnail, plot=plot , show = title , viewmode="movie_with_plot" , folder=True) )    return itemlistdef episodios(item):    logger.info("tvalacarta.channels.rtspan episodios")        itemlist = []    data = scrapertools.cachePage(item.url)    '''    <li class="list-element">    <div class="list-cell">    <figure class="media">    <a href="/programas/la_lista_de_erick/167633-lista-erick-herederos-honor">    <span class="ration_16-9">    <img src="http://cdn.rt.com/actualidad/public_images/2015.02/thumbnail/54f071fc71139e50438b4574.jpg" alt="erick">    <i class="icond-video">    <span class="play">    &nbsp;    </span>    </i>    </span>    </a>    </figure>    <time class="date">    27.02.2015    </time>    <h3>    <a href="/programas/la_lista_de_erick/167633-lista-erick-herederos-honor">La lista de Erick: Herederos del honor</a>    </h3>    </div>    </li>    '''    patron  = '<li class="list-element"[^<]+'    patron += '<div class="list-cell"[^<]+'    patron += '<figure class="media"[^<]+'    patron += '<a href="([^"]+)"[^<]+'    patron += '<span class="ration_16-9"[^<]+'    patron += '<img src="([^"]+)"[^<]+'    patron += '<i class="icond-video"[^<]+'    patron += '<span[^<]+</span[^<]+'    patron += '</i[^<]+'    patron += '</span[^<]+'    patron += '</a[^<]+'    patron += '</figure[^<]+'    patron += '<time class="date">([^<]+)</time[^<]+'    patron += '<h3[^<]+'    patron += '<a[^>]+>([^<]+)</a'    matches = re.compile(patron,re.DOTALL).findall(data)    if DEBUG: scrapertools.printMatches(matches)	    for scrapedurl,scrapedthumbnail,fecha,scrapedtitle in matches:        title = scrapedtitle.strip()        url = urlparse.urljoin(item.url,scrapedurl)        thumbnail = scrapedthumbnail        plot = ""        itemlist.append( Item(channel=__channel__, action="play", title=title, url=url, thumbnail=thumbnail,  folder=False) )    next_page_url = scrapertools.find_single_match(data,'<button class="button-grey js-listing-more" style="[^"]+" data-href="([^"]+)">')    if next_page_url!="":        itemlist.append( Item(channel=__channel__, action="episodios", title=">> Página siguiente" , url=urlparse.urljoin(item.url,next_page_url) ,  folder=True) )        return itemlistdef play(item):    logger.info("tvalacarta.channels.rtspan play")        data = scrapertools.cachePage(item.url)    video_url = scrapertools.find_single_match(data,'href="([^"]+)">Descargar video</a>')        if video_url=="":        video_url = scrapertools.find_single_match(data,'file\:\s+"([^"]+)"')    itemlist = []    itemlist.append( Item(channel=__channel__, action="play", server="directo", title=item.title , url=video_url ,  folder=False) )    return itemlistdef test():    # Al entrar sale una lista de programas    programas_items = mainlist(Item())    if len(programas_items)==0:        print "No devuelve programas"        return False    videos_items = videos(programas_items[0])    if len(videos_items)==1:        print "No devuelve videos en "+programas_items[0].title        return False    return True